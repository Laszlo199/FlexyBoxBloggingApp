@page "/login"
@using BloggingAppFrontend.Application.Dtos.AuthDtos
@using BloggingAppFrontend.Application.Services
@using BloggingAppFrontend.Components.Layout
@rendermode InteractiveServer
@inject NavigationManager Navigation
@layout AuthLayout
@inject IAuthService AuthService

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
                        <div class="form-group">
                            <label for="username">Username</label>
                            <InputText id="username" class="form-control" @bind-Value="loginModel.Email" required />
                        </div>
                        <div class="form-group">
                            <label for="password">Password</label>
                            <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" required />
                        </div>
                        <button type="submit" class="btn btn-primary w-100 mt-3">Sign in</button>
                    </EditForm>
                    <div class="mt-3 text-center">
                        <span>Don't have an account yet?</span>
                        <a href="/Register" class="btn btn-link">Sign up</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginDto loginModel = new LoginDto();

    private async Task HandleLogin()
    {

        var success = await AuthService.Login(loginModel);
        if (success)
        {
            await Task.Delay(1000);
            Navigation.NavigateTo("/", replace: true);
        }
    }
}