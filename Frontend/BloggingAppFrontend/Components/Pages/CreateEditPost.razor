@page "/post-editor/{id:int?}"
@inherits LayoutComponentBase
@inject NavigationManager Navigation

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="card shadow-lg">
                <div class="card-header text-center">
                    <h2>@(isEditMode ? "Edit Post" : "Create New Post")</h2>
                </div>
                <div class="card-body">
                    <EditForm Model="@postModel" OnValidSubmit="HandleValidSubmit">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="mb-3">
                            <label for="title" class="form-label">Title</label>
                            <InputText id="title" class="form-control" @bind-Value="postModel.Title" />
                        </div>

                        <div class="mb-3">
                            <label for="content" class="form-label">Content</label>
                            <InputTextArea id="content" class="form-control" @bind-Value="postModel.Content" rows="5" />
                        </div>

                        <div class="mb-3">
                            <label for="date" class="form-label">Date</label>
                            <InputDate id="date" class="form-control" @bind-Value="postModel.Date" />
                        </div>

                        <div class="d-flex justify-content-end">
                            <button type="submit" class="btn btn-primary me-2">@(isEditMode ? "Save Changes" : "Create Post")</button>
                            <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int? id { get; set; }
    private BlogPost postModel = new BlogPost();
    private bool isEditMode;

    protected override async Task OnInitializedAsync()
    {
     
    }

    private async Task HandleValidSubmit()
    {
        Navigation.NavigateTo("/");
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/");
    }

    public class BlogPost
    {
        public int Id { get; set; }
       
        public string Title { get; set; } = string.Empty;
   
        public string Content { get; set; } = string.Empty;
        public DateTime Date { get; set; } = DateTime.Now;
    }
}